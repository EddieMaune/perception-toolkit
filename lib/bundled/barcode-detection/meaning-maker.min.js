this.PerceptionToolkit=this.PerceptionToolkit||{},this.PerceptionToolkit.meaningMaker=function(t){"use strict";function r(t,r){return t+"__"+r}class e{constructor(){this.artstores=[],this.nearbyMarkers=new Map,this.nearbyResults=new Set,this.currentGeolocation={}}async addArtifactStore(t){return this.artstores.push(t),this.generateDiffs()}async updateGeolocation(t){return this.currentGeolocation=t,this.generateDiffs()}async markerFound(t){return this.nearbyMarkers.set(r(t.type,t.value),t),this.generateDiffs()}async markerLost(t){return this.nearbyMarkers.delete(r(t.type,t.value)),this.generateDiffs()}async generateDiffs(){const t=new Set(this.artstores.map(t=>t.findRelevantArtifacts(Array.from(this.nearbyMarkers.values()),this.currentGeolocation)).flat(1)),r=[...t].filter(t=>!this.nearbyResults.has(t)),e=[...this.nearbyResults].filter(r=>!t.has(r)),a={found:[],lost:[]};for(const{target:t,artifact:e}of r){const r=e.arContent;a.found.push({target:t,content:r,artifact:e})}for(const{target:t,artifact:r}of e){const e=r.arContent;a.lost.push({target:t,content:e,artifact:r})}return this.nearbyResults=t,a}}class a{decode(t){return this.decodeUnknown(t).flat()}decodeUnknown(t){if(Array.isArray(t))return this.decodeArray(t);if(!("@type"in t)||"string"!=typeof t["@type"])return[];switch(t["@type"]){case"DataFeed":return this.decodeDataFeed(t);case"ARArtifact":return this.decodeArArtifact(t);default:return[]}}decodeArray(t){return t.map(t=>this.decodeUnknown(t)).flat()}decodeDataFeed(t){const r=t.dataFeedElement;return r?Array.isArray(r)?this.decodeArray(r):this.decodeUnknown(r):[]}decodeArArtifact(t){return[t]}}class s{constructor(){this.decoder=new a}async fromHtmlUrl(t){const r=await fetch(t.toString()),e=await r.text(),a=(new DOMParser).parseFromString(e,"text/html");return this.fromElement(a,t)}async fromJsonUrl(t){const r=await fetch(t.toString());if(!r.ok)throw Error(r.statusText);const e=await r.json();return this.fromJson(e)}async fromElement(t,r){const e=[],a=t.querySelectorAll("script[type='application/ld+json']:not([src])");for(const t of a)e.push(this.fromJson(JSON.parse(t.textContent||"")));const s=t.querySelectorAll("script[type='application/ld+json'][src]");for(const t of s){const a=t.getAttribute("src");a&&e.push(this.fromJsonUrl(new URL(a,r)))}const o=t.querySelectorAll("link[rel='alternate'][type='application/ld+json'][href]");for(const t of o){const a=t.getAttribute("href");a&&e.push(this.fromJsonUrl(new URL(a,r)))}return(await Promise.all(e)).flat(1)}async fromJson(t){return this.decoder.decode(t)}}class o{constructor(){this.markers=new Map}addMarker(t,r){r.text&&this.markers.set(r.text,{target:r,artifact:t})}findRelevantArtifacts(t){const r=[];for(const e of t){if(!e.value)continue;const t=this.markers.get(e.value);t&&r.push(t)}return r}}class n{constructor(){this.markerStore=new o}addArtifact(t){if(!t.arTarget)return;let r=[];r=Array.isArray(t.arTarget)?t.arTarget:[t.arTarget];for(const e of r){switch(e["@type"]||""){case"Barcode":this.markerStore.addMarker(t,e)}}}findRelevantArtifacts(t,r){return this.markerStore.findRelevantArtifacts(t)}}return t.MeaningMaker=class{constructor(){this.artloader=new s,this.artstore=new n,this.artdealer=new e,this.artdealer.addArtifactStore(this.artstore)}async init(){const t=await this.artloader.fromElement(document,document.URL);this.saveArtifacts(t)}async loadArtifactsFromJsonldUrl(t){const r=await this.artloader.fromJsonUrl(t);this.saveArtifacts(r)}async loadArtifactsFromSameOriginUrl(t){if(t.hostname!==window.location.hostname||t.port!==window.location.port||t.protocol!==window.location.protocol)return;const r=await this.artloader.fromHtmlUrl(t);for(const t of r)this.artstore.addArtifact(t)}async markerFound(t){try{const r=new URL(t.value);await this.loadArtifactsFromSameOriginUrl(r)}catch(t){}return this.artdealer.markerFound(t)}async markerLost(t){return this.artdealer.markerLost(t)}async updateGeolocation(t){return this.artdealer.updateGeolocation(t)}saveArtifacts(t){for(const r of t)this.artstore.addArtifact(r)}},t}({});